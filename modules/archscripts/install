#!/usr/bin/env sh
set -e

usage() {
	cat <<EOF
Example: config $DOTFILES_MODULE_NAME --dotfiles ~/dotfiles --host legion
EOF
}
usage_err() {
	if ! [ "$1" = "" ]; then
		echo "$1" >&2
	fi
	usage
	exit 1
}

while [ $# -gt 0 ]; do
	case $1 in
		--host)
			[ "$2" = "" ] && usage_err "Argument not specified"
			host="$2"
			shift
			;;
		--dotfiles)
			[ "$2" = "" ] && usage_err "Argument not specified"
			dotfiles="$2"
			shift
			;;
		*)
			usage_err "Invalid option: $1"
			;;
	esac
	shift
done
[ "$dotfiles" = "" ] && usage_err "Flag not specified"
[ "$host" = "" ] && usage_err "Flag not specified"

newscript archconf <<EOF
#!/usr/bin/env sh

cd $dotfiles
exec \$EDITOR ./configuration-$host.sh
EOF

newscript archupd <<EOF
#!/usr/bin/env sh

if ! [ "\$1" = "" ]; then
	if [ "\$1" = 'upgrade' ]; then
		paru -Syu
	else
		>&2 echo "option [\$1] does not exist. Available options: [upgrade]"
		exit 1
	fi
fi

cd $dotfiles
./configuration-$host.sh

if [ "\$1" = 'upgrade' ]; then
	sudo mkinitcpio -P
	sudo locale-gen
	sudo bootctl update
	sudo hwclock --systohc
fi
EOF

newscript archexport <<EOF
#!/usr/bin/env sh

echo "\$(paru -Qe | cut -d ' ' -f 1)" > $dotfiles/packages-$host
EOF

newscript archgit <<EOF
#!/usr/bin/env sh

cd $dotfiles
lazygit
EOF

newscript archclean <<EOF
#!/usr/bin/env sh

orphans="\$(paru -Qdtq | xargs)"
if [ ! "\$orphans" = "" ]; then
	paru -Rs --noconfirm \$orphans
fi
yes | paru -Scc
EOF

newscript archedit <<EOF
#!/usr/bin/env sh

if [ "\$EDITOR" = "" ]; then
	EDITOR="nvim"
fi

command="\$(whereis "\$1" | cut -d " " -f 2)"
\$EDITOR "\$command"
EOF
